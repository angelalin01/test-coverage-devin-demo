[tool.poetry]
name = "telemetry-status-service"
version = "0.1.0"
description = "Ground telemetry processing service for launch operations milestone status tracking"
authors = ["Launch Operations Team"]
readme = "README.md"
packages = [
    { include = "ingestion" },
    { include = "processors" },
    { include = "status" },
    { include = "api" }
]

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.104.1"
uvicorn = "^0.24.0"
pydantic = "^2.5.0"
python-dateutil = "^2.8.2"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
coverage = "^7.3.2"
black = "^23.11.0"
mypy = "^1.7.1"
httpx = ">=0.27.0,<0.28.0"

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--verbose --cov=ingestion --cov=processors --cov=status --cov=api --cov-report=term-missing --cov-report=html"

[tool.coverage.run]
source = ["ingestion", "processors", "status", "api"]
omit = ["tests/*", "**/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
